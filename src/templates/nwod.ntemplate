
local notes = {
    "Concept",
    "Virtue",
    "Vice",
    "Faction",
    "Group Name",
    "Chronicle",
}

local attributes = {
    { name="Intelligence",  group="Mental" },
    { name="Wits",	    group="Mental" },
    { name="Resolve",	    group="Mental" },
    { name="Strength",	    group="Physical" },
    { name="Dexterity",	    group="Physical" },
    { name="Stamina",	    group="Physical" },
    { name="Presence",	    group="Social" },
    { name="Manipulation",  group="Social" },
    { name="Composure",	    group="Social" },
}

local skills = {
    { name="Academics",	    group="Mental" },
    { name="Computer",	    group="Mental" },
    { name="Crafts",	    group="Mental" },
    { name="Investigation", group="Mental" },
    { name="Medicine",	    group="Mental" },
    { name="Occult",	    group="Mental" },
    { name="Politics",	    group="Mental" },
    { name="Science",	    group="Mental" },
    { name="Athletics",	    group="Physical" },
    { name="Brawl",	    group="Physical" },
    { name="Drive",	    group="Physical" },
    { name="Firearms",	    group="Physical" },
    { name="Larceny",	    group="Physical" },
    { name="Stealth",	    group="Physical" },
    { name="Survival",	    group="Physical" },
    { name="Weaponry",	    group="Physical" },
    { name="Animal Ken",    group="Social" },
    { name="Empathy",	    group="Social" },
    { name="Expression",    group="Social" },
    { name="Intimidation",  group="Social" },
    { name="Persuasion",    group="Social" },
    { name="Socialize",	    group="Social" },
    { name="Streetwise",    group="Social" },
    { name="Subterfuge",    group="Social" },
}



local function init(ch)
    local at

    for i,note in ipairs(notes) do
	local n = ch:note_add(note,note)
    end

    for i,attr in ipairs(attributes) do
	local at = ch:attr_add(attr.name)
	at:prop_add("Group", "Attributes/" .. attr.group)
	at:value_add(1,"Base");
    end
    for i,skill in ipairs(skills) do
	local at = ch:attr_add(skill.name)
	at:prop_add("Group", "Skills/" .. skill.group)
    end

    -- Defense: Lower of dex/wits
    local at = ch:attr_add("Defense")
    local at2 = ch:attr_add("Defense Lowest");
    at2:ref_add("Dexterity");
    at2:ref_add("Wits");
    at2:filter_set("Nebula.Minimum");
    at:ref_add("Defense Lowest");
    
    -- size: 5
    local at = ch:attr_add("Size");
    at:value_add(5,"Human Base")

    -- Health: stamina + size
    local at = ch:attr_add("Health");
    at:ref_add("Stamina");
    at:ref_add("Size");

    -- init: dex + composure
    local at = ch:attr_add("Initiative");
    at:ref_add("Dexterity");
    at:ref_add("Composure");

    -- Morality: 7
    local at = ch:attr_add("Morality");
    at:value_add(7,"Base");

    -- speed: dex + str + 5
    local at = ch:attr_add("Speed");
    at:ref_add("Strength");
    at:ref_add("Dexterity");
    at:value_add(5,"Human Base");

    -- willpower: resolve + composure
    local at = ch:attr_add("Willpower");
    at:ref_add("Resolve");
    at:ref_add("Composure");

    return true
end

print("Warning Debugging mode enabled")
if not ch then
    ch = nebula.character_add("NWOD Test")
    debug = true
end

init(ch)

if debug then
    ch:save("nwodtest.nch")
end
return true
-- vim: set sw=4 sts=4 syn=lua : 
